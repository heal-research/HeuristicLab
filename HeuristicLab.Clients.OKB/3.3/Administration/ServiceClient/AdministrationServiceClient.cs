//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeuristicLab.Clients.OKB.Administration
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OKBItem", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Services.OKB.Administration." +
        "DataTransfer")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.NamedOKBItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.AlgorithmClass))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.Algorithm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.ProblemClass))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.Problem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.Platform))]
    public partial class OKBItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long IdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NamedOKBItem", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Services.OKB.Administration." +
        "DataTransfer")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.AlgorithmClass))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.Algorithm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.ProblemClass))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.Problem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HeuristicLab.Clients.OKB.Administration.Platform))]
    public partial class NamedOKBItem : HeuristicLab.Clients.OKB.Administration.OKBItem
    {
        
        private string DescriptionField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true))
                {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NameField, value) != true))
                {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlgorithmClass", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Services.OKB.Administration." +
        "DataTransfer")]
    public partial class AlgorithmClass : HeuristicLab.Clients.OKB.Administration.NamedOKBItem
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Algorithm", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Services.OKB.Administration." +
        "DataTransfer")]
    public partial class Algorithm : HeuristicLab.Clients.OKB.Administration.NamedOKBItem
    {
        
        private long AlgorithmClassIdField;
        
        private string DataTypeNameField;
        
        private string DataTypeTypeNameField;
        
        private long PlatformIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AlgorithmClassId
        {
            get
            {
                return this.AlgorithmClassIdField;
            }
            set
            {
                if ((this.AlgorithmClassIdField.Equals(value) != true))
                {
                    this.AlgorithmClassIdField = value;
                    this.RaisePropertyChanged("AlgorithmClassId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataTypeName
        {
            get
            {
                return this.DataTypeNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DataTypeNameField, value) != true))
                {
                    this.DataTypeNameField = value;
                    this.RaisePropertyChanged("DataTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataTypeTypeName
        {
            get
            {
                return this.DataTypeTypeNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DataTypeTypeNameField, value) != true))
                {
                    this.DataTypeTypeNameField = value;
                    this.RaisePropertyChanged("DataTypeTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlatformId
        {
            get
            {
                return this.PlatformIdField;
            }
            set
            {
                if ((this.PlatformIdField.Equals(value) != true))
                {
                    this.PlatformIdField = value;
                    this.RaisePropertyChanged("PlatformId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProblemClass", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Services.OKB.Administration." +
        "DataTransfer")]
    public partial class ProblemClass : HeuristicLab.Clients.OKB.Administration.NamedOKBItem
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Problem", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Services.OKB.Administration." +
        "DataTransfer")]
    public partial class Problem : HeuristicLab.Clients.OKB.Administration.NamedOKBItem
    {
        
        private string DataTypeNameField;
        
        private string DataTypeTypeNameField;
        
        private long PlatformIdField;
        
        private long ProblemClassIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataTypeName
        {
            get
            {
                return this.DataTypeNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DataTypeNameField, value) != true))
                {
                    this.DataTypeNameField = value;
                    this.RaisePropertyChanged("DataTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataTypeTypeName
        {
            get
            {
                return this.DataTypeTypeNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DataTypeTypeNameField, value) != true))
                {
                    this.DataTypeTypeNameField = value;
                    this.RaisePropertyChanged("DataTypeTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlatformId
        {
            get
            {
                return this.PlatformIdField;
            }
            set
            {
                if ((this.PlatformIdField.Equals(value) != true))
                {
                    this.PlatformIdField = value;
                    this.RaisePropertyChanged("PlatformId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemClassId
        {
            get
            {
                return this.ProblemClassIdField;
            }
            set
            {
                if ((this.ProblemClassIdField.Equals(value) != true))
                {
                    this.ProblemClassIdField = value;
                    this.RaisePropertyChanged("ProblemClassId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Platform", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Services.OKB.Administration." +
        "DataTransfer")]
    public partial class Platform : HeuristicLab.Clients.OKB.Administration.NamedOKBItem
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HeuristicLab.Clients.OKB.Administration.IAdministrationService")]
    public interface IAdministrationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetPlatform", ReplyAction="http://tempuri.org/IAdministrationService/GetPlatformResponse")]
        HeuristicLab.Clients.OKB.Administration.Platform GetPlatform(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetPlatforms", ReplyAction="http://tempuri.org/IAdministrationService/GetPlatformsResponse")]
        System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.Platform> GetPlatforms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/AddPlatform", ReplyAction="http://tempuri.org/IAdministrationService/AddPlatformResponse")]
        long AddPlatform(HeuristicLab.Clients.OKB.Administration.Platform dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdatePlatform", ReplyAction="http://tempuri.org/IAdministrationService/UpdatePlatformResponse")]
        void UpdatePlatform(HeuristicLab.Clients.OKB.Administration.Platform dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/DeletePlatform", ReplyAction="http://tempuri.org/IAdministrationService/DeletePlatformResponse")]
        void DeletePlatform(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetAlgorithmClass", ReplyAction="http://tempuri.org/IAdministrationService/GetAlgorithmClassResponse")]
        HeuristicLab.Clients.OKB.Administration.AlgorithmClass GetAlgorithmClass(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetAlgorithmClasses", ReplyAction="http://tempuri.org/IAdministrationService/GetAlgorithmClassesResponse")]
        System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.AlgorithmClass> GetAlgorithmClasses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/AddAlgorithmClass", ReplyAction="http://tempuri.org/IAdministrationService/AddAlgorithmClassResponse")]
        long AddAlgorithmClass(HeuristicLab.Clients.OKB.Administration.AlgorithmClass dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateAlgorithmClass", ReplyAction="http://tempuri.org/IAdministrationService/UpdateAlgorithmClassResponse")]
        void UpdateAlgorithmClass(HeuristicLab.Clients.OKB.Administration.AlgorithmClass dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/DeleteAlgorithmClass", ReplyAction="http://tempuri.org/IAdministrationService/DeleteAlgorithmClassResponse")]
        void DeleteAlgorithmClass(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetAlgorithm", ReplyAction="http://tempuri.org/IAdministrationService/GetAlgorithmResponse")]
        HeuristicLab.Clients.OKB.Administration.Algorithm GetAlgorithm(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetAlgorithms", ReplyAction="http://tempuri.org/IAdministrationService/GetAlgorithmsResponse")]
        System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.Algorithm> GetAlgorithms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/AddAlgorithm", ReplyAction="http://tempuri.org/IAdministrationService/AddAlgorithmResponse")]
        long AddAlgorithm(HeuristicLab.Clients.OKB.Administration.Algorithm dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateAlgorithm", ReplyAction="http://tempuri.org/IAdministrationService/UpdateAlgorithmResponse")]
        void UpdateAlgorithm(HeuristicLab.Clients.OKB.Administration.Algorithm dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/DeleteAlgorithm", ReplyAction="http://tempuri.org/IAdministrationService/DeleteAlgorithmResponse")]
        void DeleteAlgorithm(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetAlgorithmUsers", ReplyAction="http://tempuri.org/IAdministrationService/GetAlgorithmUsersResponse")]
        System.Collections.Generic.List<System.Guid> GetAlgorithmUsers(long algorithmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateAlgorithmUsers", ReplyAction="http://tempuri.org/IAdministrationService/UpdateAlgorithmUsersResponse")]
        void UpdateAlgorithmUsers(long algorithmId, System.Collections.Generic.List<System.Guid> users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetAlgorithmData", ReplyAction="http://tempuri.org/IAdministrationService/GetAlgorithmDataResponse")]
        byte[] GetAlgorithmData(long algorithmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateAlgorithmData", ReplyAction="http://tempuri.org/IAdministrationService/UpdateAlgorithmDataResponse")]
        void UpdateAlgorithmData(long algorithmId, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetProblemClass", ReplyAction="http://tempuri.org/IAdministrationService/GetProblemClassResponse")]
        HeuristicLab.Clients.OKB.Administration.ProblemClass GetProblemClass(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetProblemClasses", ReplyAction="http://tempuri.org/IAdministrationService/GetProblemClassesResponse")]
        System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.ProblemClass> GetProblemClasses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/AddProblemClass", ReplyAction="http://tempuri.org/IAdministrationService/AddProblemClassResponse")]
        long AddProblemClass(HeuristicLab.Clients.OKB.Administration.ProblemClass dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateProblemClass", ReplyAction="http://tempuri.org/IAdministrationService/UpdateProblemClassResponse")]
        void UpdateProblemClass(HeuristicLab.Clients.OKB.Administration.ProblemClass dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/DeleteProblemClass", ReplyAction="http://tempuri.org/IAdministrationService/DeleteProblemClassResponse")]
        void DeleteProblemClass(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetProblem", ReplyAction="http://tempuri.org/IAdministrationService/GetProblemResponse")]
        HeuristicLab.Clients.OKB.Administration.Problem GetProblem(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetProblems", ReplyAction="http://tempuri.org/IAdministrationService/GetProblemsResponse")]
        System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.Problem> GetProblems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/AddProblem", ReplyAction="http://tempuri.org/IAdministrationService/AddProblemResponse")]
        long AddProblem(HeuristicLab.Clients.OKB.Administration.Problem dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateProblem", ReplyAction="http://tempuri.org/IAdministrationService/UpdateProblemResponse")]
        void UpdateProblem(HeuristicLab.Clients.OKB.Administration.Problem dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/DeleteProblem", ReplyAction="http://tempuri.org/IAdministrationService/DeleteProblemResponse")]
        void DeleteProblem(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetProblemUsers", ReplyAction="http://tempuri.org/IAdministrationService/GetProblemUsersResponse")]
        System.Collections.Generic.List<System.Guid> GetProblemUsers(long problemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateProblemUsers", ReplyAction="http://tempuri.org/IAdministrationService/UpdateProblemUsersResponse")]
        void UpdateProblemUsers(long problemId, System.Collections.Generic.List<System.Guid> users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/GetProblemData", ReplyAction="http://tempuri.org/IAdministrationService/GetProblemDataResponse")]
        byte[] GetProblemData(long problemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrationService/UpdateProblemData", ReplyAction="http://tempuri.org/IAdministrationService/UpdateProblemDataResponse")]
        void UpdateProblemData(long problemId, byte[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministrationServiceChannel : HeuristicLab.Clients.OKB.Administration.IAdministrationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministrationServiceClient : System.ServiceModel.ClientBase<HeuristicLab.Clients.OKB.Administration.IAdministrationService>, HeuristicLab.Clients.OKB.Administration.IAdministrationService
    {
        
        public AdministrationServiceClient()
        {
        }
        
        public AdministrationServiceClient(string endpointConfigurationName) //: 
                //base(endpointConfigurationName)
        {
        }
        
        public AdministrationServiceClient(string endpointConfigurationName, string remoteAddress)// : 
                //base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public AdministrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)// : 
                //base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public AdministrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public HeuristicLab.Clients.OKB.Administration.Platform GetPlatform(long id)
        {
            return base.Channel.GetPlatform(id);
        }
        
        public System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.Platform> GetPlatforms()
        {
            return base.Channel.GetPlatforms();
        }
        
        public long AddPlatform(HeuristicLab.Clients.OKB.Administration.Platform dto)
        {
            return base.Channel.AddPlatform(dto);
        }
        
        public void UpdatePlatform(HeuristicLab.Clients.OKB.Administration.Platform dto)
        {
            base.Channel.UpdatePlatform(dto);
        }
        
        public void DeletePlatform(long id)
        {
            base.Channel.DeletePlatform(id);
        }
        
        public HeuristicLab.Clients.OKB.Administration.AlgorithmClass GetAlgorithmClass(long id)
        {
            return base.Channel.GetAlgorithmClass(id);
        }
        
        public System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.AlgorithmClass> GetAlgorithmClasses()
        {
            return base.Channel.GetAlgorithmClasses();
        }
        
        public long AddAlgorithmClass(HeuristicLab.Clients.OKB.Administration.AlgorithmClass dto)
        {
            return base.Channel.AddAlgorithmClass(dto);
        }
        
        public void UpdateAlgorithmClass(HeuristicLab.Clients.OKB.Administration.AlgorithmClass dto)
        {
            base.Channel.UpdateAlgorithmClass(dto);
        }
        
        public void DeleteAlgorithmClass(long id)
        {
            base.Channel.DeleteAlgorithmClass(id);
        }
        
        public HeuristicLab.Clients.OKB.Administration.Algorithm GetAlgorithm(long id)
        {
            return base.Channel.GetAlgorithm(id);
        }
        
        public System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.Algorithm> GetAlgorithms()
        {
            return base.Channel.GetAlgorithms();
        }
        
        public long AddAlgorithm(HeuristicLab.Clients.OKB.Administration.Algorithm dto)
        {
            return base.Channel.AddAlgorithm(dto);
        }
        
        public void UpdateAlgorithm(HeuristicLab.Clients.OKB.Administration.Algorithm dto)
        {
            base.Channel.UpdateAlgorithm(dto);
        }
        
        public void DeleteAlgorithm(long id)
        {
            base.Channel.DeleteAlgorithm(id);
        }
        
        public System.Collections.Generic.List<System.Guid> GetAlgorithmUsers(long algorithmId)
        {
            return base.Channel.GetAlgorithmUsers(algorithmId);
        }
        
        public void UpdateAlgorithmUsers(long algorithmId, System.Collections.Generic.List<System.Guid> users)
        {
            base.Channel.UpdateAlgorithmUsers(algorithmId, users);
        }
        
        public byte[] GetAlgorithmData(long algorithmId)
        {
            return base.Channel.GetAlgorithmData(algorithmId);
        }
        
        public void UpdateAlgorithmData(long algorithmId, byte[] data)
        {
            base.Channel.UpdateAlgorithmData(algorithmId, data);
        }
        
        public HeuristicLab.Clients.OKB.Administration.ProblemClass GetProblemClass(long id)
        {
            return base.Channel.GetProblemClass(id);
        }
        
        public System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.ProblemClass> GetProblemClasses()
        {
            return base.Channel.GetProblemClasses();
        }
        
        public long AddProblemClass(HeuristicLab.Clients.OKB.Administration.ProblemClass dto)
        {
            return base.Channel.AddProblemClass(dto);
        }
        
        public void UpdateProblemClass(HeuristicLab.Clients.OKB.Administration.ProblemClass dto)
        {
            base.Channel.UpdateProblemClass(dto);
        }
        
        public void DeleteProblemClass(long id)
        {
            base.Channel.DeleteProblemClass(id);
        }
        
        public HeuristicLab.Clients.OKB.Administration.Problem GetProblem(long id)
        {
            return base.Channel.GetProblem(id);
        }
        
        public System.Collections.Generic.List<HeuristicLab.Clients.OKB.Administration.Problem> GetProblems()
        {
            return base.Channel.GetProblems();
        }
        
        public long AddProblem(HeuristicLab.Clients.OKB.Administration.Problem dto)
        {
            return base.Channel.AddProblem(dto);
        }
        
        public void UpdateProblem(HeuristicLab.Clients.OKB.Administration.Problem dto)
        {
            base.Channel.UpdateProblem(dto);
        }
        
        public void DeleteProblem(long id)
        {
            base.Channel.DeleteProblem(id);
        }
        
        public System.Collections.Generic.List<System.Guid> GetProblemUsers(long problemId)
        {
            return base.Channel.GetProblemUsers(problemId);
        }
        
        public void UpdateProblemUsers(long problemId, System.Collections.Generic.List<System.Guid> users)
        {
            base.Channel.UpdateProblemUsers(problemId, users);
        }
        
        public byte[] GetProblemData(long problemId)
        {
            return base.Channel.GetProblemData(problemId);
        }
        
        public void UpdateProblemData(long problemId, byte[] data)
        {
            base.Channel.UpdateProblemData(problemId, data);
        }
    }
}
